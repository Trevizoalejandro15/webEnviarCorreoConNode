{"id":"node_modules/@azure/communication-email/dist-esm/src/models.js","dependencies":[{"name":"C:\\Users\\aleja\\OneDrive\\Escritorio\\webConNode\\node_modules\\@azure\\communication-email\\dist-esm\\src\\models.js.map","includedInParent":true,"mtime":1702588444015},{"name":"C:\\Users\\aleja\\OneDrive\\Escritorio\\webConNode\\package.json","includedInParent":true,"mtime":1702592784792},{"name":"C:\\Users\\aleja\\OneDrive\\Escritorio\\webConNode\\node_modules\\@azure\\communication-email\\package.json","includedInParent":true,"mtime":1702588443664},{"name":"./generated/src/models","loc":{"line":3,"column":38,"index":113},"parent":"C:\\Users\\aleja\\OneDrive\\Escritorio\\webConNode\\node_modules\\@azure\\communication-email\\dist-esm\\src\\models.js","resolved":"C:\\Users\\aleja\\OneDrive\\Escritorio\\webConNode\\node_modules\\@azure\\communication-email\\dist-esm\\src\\generated\\src\\models\\index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"KnownEmailSendStatus\", {\n  enumerable: true,\n  get: function () {\n    return _models.KnownEmailSendStatus;\n  }\n});\nvar _models = require(\"./generated/src/models\");"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/models.ts","name":null,"original":{"line":63,"column":0},"generated":{"line":12,"column":0}},{"source":"../../src/models.ts","name":null,"original":{"line":63,"column":0},"generated":{"line":12,"column":4}},{"source":"../../src/models.ts","name":null,"original":{"line":63,"column":0},"generated":{"line":12,"column":11}},{"source":"../../src/models.ts","name":null,"original":{"line":63,"column":0},"generated":{"line":12,"column":14}},{"source":"../../src/models.ts","name":null,"original":{"line":63,"column":0},"generated":{"line":12,"column":21}}],"sources":{"../../src/models.ts":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { CommonClientOptions, OperationOptions } from \"@azure/core-client\";\nimport { EmailRecipients, EmailAttachment, EmailAddress } from \"./models\";\n\n/**\n * Client options used to configure Email Client API requests.\n */\nexport interface EmailClientOptions extends CommonClientOptions {}\n\n/** Content of the email. */\nexport type EmailContent = HtmlEmailContent | PlainTextEmailContent;\n\n/** Content of the email with a required html property. */\nexport interface HtmlEmailContent {\n  /** Subject of the email message */\n  subject: string;\n  /** Plain text version of the email message. */\n  plainText?: string;\n  /** Html version of the email message. */\n  html: string;\n}\n\n/** Content of the email with a required plainText property. */\nexport interface PlainTextEmailContent {\n  /** Subject of the email message */\n  subject: string;\n  /** Plain text version of the email message. */\n  plainText: string;\n  /** Html version of the email message. */\n  html?: string;\n}\n\n/** Message payload for sending an email */\nexport interface EmailMessage {\n  /** Custom email headers to be passed. */\n  headers?: { [propertyName: string]: string };\n  /** Sender email address from a verified domain. */\n  senderAddress: string;\n  /** Email content to be sent. */\n  content: EmailContent;\n  /** Recipients for the email. */\n  recipients: EmailRecipients;\n  /** List of attachments. Please note that we limit the total size of an email request (which includes attachments) to 10MB. */\n  attachments?: EmailAttachment[];\n  /** Email addresses where recipients' replies will be sent to. */\n  replyTo?: EmailAddress[];\n  /** Indicates whether user engagement tracking should be disabled for this request if the resource-level user engagement tracking setting was already enabled in the control plane. */\n  disableUserEngagementTracking?: boolean;\n}\n\n/** Optional parameters for the beginSend method. */\nexport interface EmailSendOptionalParams extends OperationOptions {\n  /** This is the ID used by the status monitor for this long running operation. */\n  operationId?: string;\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\nexport {\n  EmailRecipients,\n  EmailAddress,\n  EmailAttachment,\n  EmailSendResponse,\n  EmailSendHeaders,\n  EmailSendResult,\n  EmailSendStatus,\n  ErrorDetail,\n  ErrorAdditionalInfo,\n  KnownEmailSendStatus,\n} from \"./generated/src/models\";\n"},"lineCount":null}},"error":null,"hash":"727c37b5e95b8b3c054343ffd13e7d17","cacheData":{"env":{}}}