{"id":"node_modules/@azure/core-util/dist-esm/src/typeGuards.js","dependencies":[{"name":"C:\\Users\\aleja\\OneDrive\\Escritorio\\webConNode\\node_modules\\@azure\\core-util\\dist-esm\\src\\typeGuards.js.map","includedInParent":true,"mtime":1702588443879},{"name":"C:\\Users\\aleja\\OneDrive\\Escritorio\\webConNode\\package.json","includedInParent":true,"mtime":1702592784792},{"name":"C:\\Users\\aleja\\OneDrive\\Escritorio\\webConNode\\node_modules\\@azure\\core-util\\package.json","includedInParent":true,"mtime":1702588443540}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isDefined = isDefined;\nexports.isObjectWithProperties = isObjectWithProperties;\nexports.objectHasProperty = objectHasProperty;\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * Helper TypeGuard that checks if something is defined or not.\n * @param thing - Anything\n */\nfunction isDefined(thing) {\n  return typeof thing !== \"undefined\" && thing !== null;\n}\n/**\n * Helper TypeGuard that checks if the input is an object with the specified properties.\n * @param thing - Anything.\n * @param properties - The name of the properties that should appear in the object.\n */\nfunction isObjectWithProperties(thing, properties) {\n  if (!isDefined(thing) || _typeof(thing) !== \"object\") {\n    return false;\n  }\n  var _iterator = _createForOfIteratorHelper(properties),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var property = _step.value;\n      if (!objectHasProperty(thing, property)) {\n        return false;\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return true;\n}\n/**\n * Helper TypeGuard that checks if the input is an object with the specified property.\n * @param thing - Any object.\n * @param property - The name of the property that should appear in the object.\n */\nfunction objectHasProperty(thing, property) {\n  return isDefined(thing) && _typeof(thing) === \"object\" && property in thing;\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/typeGuards.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":13,"column":0}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":14,"column":0}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":15,"column":0}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":8,"column":6},"generated":{"line":19,"column":0}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":8,"column":16},"generated":{"line":19,"column":9}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":8,"column":25},"generated":{"line":19,"column":18}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":8,"column":29},"generated":{"line":19,"column":19}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":8,"column":56},"generated":{"line":19,"column":24}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":8,"column":56},"generated":{"line":19,"column":26}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":9,"column":2},"generated":{"line":20,"column":2}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":9,"column":9},"generated":{"line":20,"column":9}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":9,"column":16},"generated":{"line":20,"column":16}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":9,"column":21},"generated":{"line":20,"column":21}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":9,"column":26},"generated":{"line":20,"column":26}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":9,"column":37},"generated":{"line":20,"column":37}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":9,"column":41},"generated":{"line":20,"column":41}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":9,"column":46},"generated":{"line":20,"column":46}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":9,"column":51},"generated":{"line":20,"column":51}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":9,"column":55},"generated":{"line":20,"column":55}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":10,"column":0},"generated":{"line":21,"column":0}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":12,"column":0},"generated":{"line":22,"column":0}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":17,"column":6},"generated":{"line":27,"column":0}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":17,"column":16},"generated":{"line":27,"column":9}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":17,"column":38},"generated":{"line":27,"column":31}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":18,"column":2},"generated":{"line":27,"column":32}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":18,"column":14},"generated":{"line":27,"column":37}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":19,"column":2},"generated":{"line":27,"column":39}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":19,"column":28},"generated":{"line":27,"column":49}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":19,"column":28},"generated":{"line":27,"column":51}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":21,"column":2},"generated":{"line":28,"column":2}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":21,"column":6},"generated":{"line":28,"column":6}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":21,"column":7},"generated":{"line":28,"column":7}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":21,"column":16},"generated":{"line":28,"column":16}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":21,"column":17},"generated":{"line":28,"column":17}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":21,"column":22},"generated":{"line":28,"column":22}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":21,"column":23},"generated":{"line":28,"column":23}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":21,"column":27},"generated":{"line":28,"column":27}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":21,"column":27},"generated":{"line":28,"column":34}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":21,"column":34},"generated":{"line":28,"column":35}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":21,"column":39},"generated":{"line":28,"column":40}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":21,"column":44},"generated":{"line":28,"column":46}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":21,"column":52},"generated":{"line":28,"column":54}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":21,"column":54},"generated":{"line":28,"column":56}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":22,"column":4},"generated":{"line":29,"column":4}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":22,"column":11},"generated":{"line":29,"column":11}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":22,"column":16},"generated":{"line":29,"column":16}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":23,"column":3},"generated":{"line":31,"column":2}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":23,"column":3},"generated":{"line":31,"column":6}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":23,"column":3},"generated":{"line":31,"column":15}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":23,"column":3},"generated":{"line":31,"column":18}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":23,"column":3},"generated":{"line":31,"column":44}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":25,"column":25},"generated":{"line":31,"column":45}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":25,"column":35},"generated":{"line":31,"column":55}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":25,"column":35},"generated":{"line":32,"column":4}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":25,"column":35},"generated":{"line":32,"column":9}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":25,"column":35},"generated":{"line":33,"column":2}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":25,"column":2},"generated":{"line":34,"column":4}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":25,"column":2},"generated":{"line":34,"column":9}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":25,"column":2},"generated":{"line":34,"column":18}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":25,"column":2},"generated":{"line":34,"column":19}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":25,"column":2},"generated":{"line":34,"column":20}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":25,"column":2},"generated":{"line":34,"column":26}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":25,"column":2},"generated":{"line":34,"column":31}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":25,"column":2},"generated":{"line":34,"column":34}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":25,"column":2},"generated":{"line":34,"column":43}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":25,"column":2},"generated":{"line":34,"column":44}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":25,"column":2},"generated":{"line":34,"column":45}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":25,"column":2},"generated":{"line":34,"column":49}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":25,"column":2},"generated":{"line":34,"column":53}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":25,"column":37},"generated":{"line":34,"column":56}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":25,"column":37},"generated":{"line":35,"column":6}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":25,"column":13},"generated":{"line":35,"column":10}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":25,"column":21},"generated":{"line":35,"column":18}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":25,"column":21},"generated":{"line":35,"column":21}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":25,"column":21},"generated":{"line":35,"column":26}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":25,"column":21},"generated":{"line":35,"column":27}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":25,"column":21},"generated":{"line":35,"column":32}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":26,"column":4},"generated":{"line":36,"column":6}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":26,"column":8},"generated":{"line":36,"column":10}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":26,"column":9},"generated":{"line":36,"column":11}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":26,"column":26},"generated":{"line":36,"column":28}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":26,"column":27},"generated":{"line":36,"column":29}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":26,"column":32},"generated":{"line":36,"column":34}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":26,"column":34},"generated":{"line":36,"column":36}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":26,"column":42},"generated":{"line":36,"column":44}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":26,"column":43},"generated":{"line":36,"column":45}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":26,"column":45},"generated":{"line":36,"column":47}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":27,"column":6},"generated":{"line":37,"column":8}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":27,"column":13},"generated":{"line":37,"column":15}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":27,"column":18},"generated":{"line":37,"column":20}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":29,"column":3},"generated":{"line":40,"column":2}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":29,"column":3},"generated":{"line":40,"column":11}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":29,"column":3},"generated":{"line":40,"column":14}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":29,"column":3},"generated":{"line":41,"column":4}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":29,"column":3},"generated":{"line":41,"column":13}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":29,"column":3},"generated":{"line":41,"column":14}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":29,"column":3},"generated":{"line":41,"column":15}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":29,"column":3},"generated":{"line":41,"column":16}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":29,"column":3},"generated":{"line":41,"column":19}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":29,"column":3},"generated":{"line":42,"column":2}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":29,"column":3},"generated":{"line":43,"column":4}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":29,"column":3},"generated":{"line":43,"column":13}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":29,"column":3},"generated":{"line":43,"column":14}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":29,"column":3},"generated":{"line":43,"column":15}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":29,"column":3},"generated":{"line":44,"column":2}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":31,"column":2},"generated":{"line":45,"column":2}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":31,"column":9},"generated":{"line":45,"column":9}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":31,"column":13},"generated":{"line":45,"column":13}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":32,"column":0},"generated":{"line":46,"column":0}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":34,"column":0},"generated":{"line":47,"column":0}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":39,"column":6},"generated":{"line":52,"column":0}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":39,"column":16},"generated":{"line":52,"column":9}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":39,"column":33},"generated":{"line":52,"column":26}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":40,"column":2},"generated":{"line":52,"column":27}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":40,"column":14},"generated":{"line":52,"column":32}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":41,"column":2},"generated":{"line":52,"column":34}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":41,"column":24},"generated":{"line":52,"column":42}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":41,"column":24},"generated":{"line":52,"column":44}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":43,"column":2},"generated":{"line":53,"column":2}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":44,"column":4},"generated":{"line":53,"column":9}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":44,"column":13},"generated":{"line":53,"column":18}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":44,"column":14},"generated":{"line":53,"column":19}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":44,"column":19},"generated":{"line":53,"column":24}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":44,"column":20},"generated":{"line":53,"column":25}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":44,"column":24},"generated":{"line":53,"column":29}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":44,"column":24},"generated":{"line":53,"column":36}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":44,"column":31},"generated":{"line":53,"column":37}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":44,"column":36},"generated":{"line":53,"column":42}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":44,"column":41},"generated":{"line":53,"column":48}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":44,"column":49},"generated":{"line":53,"column":56}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":44,"column":53},"generated":{"line":53,"column":60}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":44,"column":61},"generated":{"line":53,"column":68}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":44,"column":66},"generated":{"line":53,"column":72}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":44,"column":99},"generated":{"line":53,"column":77}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":46,"column":0},"generated":{"line":54,"column":0}}],"sources":{"../../src/typeGuards.ts":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * Helper TypeGuard that checks if something is defined or not.\n * @param thing - Anything\n */\nexport function isDefined<T>(thing: T | undefined | null): thing is T {\n  return typeof thing !== \"undefined\" && thing !== null;\n}\n\n/**\n * Helper TypeGuard that checks if the input is an object with the specified properties.\n * @param thing - Anything.\n * @param properties - The name of the properties that should appear in the object.\n */\nexport function isObjectWithProperties<Thing, PropertyName extends string>(\n  thing: Thing,\n  properties: PropertyName[]\n): thing is Thing & Record<PropertyName, unknown> {\n  if (!isDefined(thing) || typeof thing !== \"object\") {\n    return false;\n  }\n\n  for (const property of properties) {\n    if (!objectHasProperty(thing, property)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Helper TypeGuard that checks if the input is an object with the specified property.\n * @param thing - Any object.\n * @param property - The name of the property that should appear in the object.\n */\nexport function objectHasProperty<Thing, PropertyName extends string>(\n  thing: Thing,\n  property: PropertyName\n): thing is Thing & Record<PropertyName, unknown> {\n  return (\n    isDefined(thing) && typeof thing === \"object\" && property in (thing as Record<string, unknown>)\n  );\n}\n"},"lineCount":null}},"error":null,"hash":"d9b8f58c1608d0d20805e508ff9a268e","cacheData":{"env":{}}}